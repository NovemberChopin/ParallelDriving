##############################################################################
# CMake
##############################################################################

cmake_minimum_required(VERSION 2.8.0)
project(parallel_driving)

set(OpenCV_DIR "/home/js/shareFolder/opencv/build")
set(cv_bridge_DIR /home/js/catkin_cx07/devel/share/cv_bridge/cmake)


## add
set(CMAKE_INCLUDE_CURRENT_DIR ON)

##############################################################################
# Catkin
##############################################################################

find_package(catkin REQUIRED COMPONENTS 
    qt_build 
    roscpp
    std_msgs
    cv_bridge
    image_transport
    message_generation
    yhs_can_msgs
)
find_package(OpenCV REQUIRED)

include_directories(
    include
    ${catkin_INCLUDE_DIRS}
    ${OpenCV_INCLUDE_DIRS}
)


catkin_package(
    # INCLUDE_DIRS include
    # LIBRARIES parallel_driving
    # CATKIN_DEPENDS roscpp rospy std_msgs message_runtime
)

##############################################################################
# Qt Environment
##############################################################################

## add
find_package(Qt5 REQUIRED Core Widgets)
set(QT_LIBRARIES Qt5::Widgets)


##############################################################################
# Sections
##############################################################################

file(GLOB QT_FORMS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ui/*.ui)
file(GLOB QT_RESOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} resources/*.qrc)
file(GLOB_RECURSE QT_MOC RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS include/parallel_driving/*.hpp)
file(GLOB_RECURSE QT_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS src/*.cpp)

QT5_ADD_RESOURCES(QT_RESOURCES_CPP ${QT_RESOURCES})
QT5_WRAP_UI(QT_FORMS_HPP ${QT_FORMS})
QT5_WRAP_CPP(QT_MOC_HPP ${QT_MOC})



add_executable(parallel_driving ${QT_SOURCES} ${QT_RESOURCES_CPP} ${QT_FORMS_HPP} ${QT_MOC_HPP})
add_dependencies(parallel_driving ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
target_link_libraries(parallel_driving ${QT_LIBRARIES} ${catkin_LIBRARIES} ${OpenCV_LIBRARIES})
install(TARGETS parallel_driving RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION})

